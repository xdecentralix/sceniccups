{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","getMintedSupplyCounter","getBurnedSupplyCounter","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","connect","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","on","updateAccount","location","reload","NAME","Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextMajor","TextDescription","StyledButton","button","StyledForm","form","StyledInput","input","SmartContractButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","burningNft","setBurningNft","mintFeedback","setMintFeedback","burnFeedback","setBurnFeedback","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","WEI_COST","INCREMENT_WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","SET_CONFIG","getData","getConfig","config","useEffect","mintcost","INCREMENT_DISPLAY_COST","rounddisplay","Math","round","mintdisplay","String","style","padding","backgroundColor","alt","src","paddingLeft","paddingRight","paddingTop","paddingBottom","borderRadius","border","boxShadow","width","textAlign","color","Number","height","fontWeight","target","href","fontSize","onClick","e","preventDefault","disabled","basecost","mintedSupplyCounter","nextID","gasLimit","totalCostWei","totalGasLimit","safeMint","send","to","from","value","once","err","then","receipt","mintNFTs","id","class","placeholder","burnInputID","document","getElementById","burn","burnNFTs","textDecoration","open","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.6d25f622.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  getMintedSupplyCounter: 0,\n  getBurnedSupplyCounter: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        getMintedSupplyCounter: action.payload.getMintedSupplyCounter,\n        getBurnedSupplyCounter: action.payload.getBurnedSupplyCounter,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply() // get total supply\n        .call();\n\n      let getMintedSupplyCounter = await store\n        .getState()\n        .blockchain.smartContract.methods.getMintedSupplyCounter() // get minted supply counter\n        .call();\n\n      let getBurnedSupplyCounter = await store\n        .getState()\n        .blockchain.smartContract.methods.getBurnedSupplyCounter() // get burned supply counter\n        .call();  \n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          getMintedSupplyCounter,\n          getBurnedSupplyCounter,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.6;\n  @media (min-width: 625px) { \n    font-size: 20px;\n  }\n  @media (min-width: 1250px) { \n    font-size: 22px;\n  }\n`;\n\nexport const TextMajor = styled.p`\n  color: var(--primary-text);\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.6;\n  @media (min-width: 625px) { \n    font-size: 40px;\n  }\n  @media (min-width: 1250px) { \n    font-size: 40px;\n  }\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\n\n\n\n\n  //Connect Button\nexport const StyledButton = styled.button`\n  padding: 0px;\n  border-radius: 0px;\n  border: solid 2px;\n  background-color: var(--secondary);\n  font-weight: bold;\n  color: #000000;\n  height: 50px;\n  width: 150px;\n  cursor: pointer;\n  box-shadow: 0px 0px 0px 0px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 0px 0px 0px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 0px 0px 0px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledForm = styled.form`\n  padding: 1px;\n  border-radius: 0px;\n  border: solid 1px;\n  height: 50px;\n  width: 100px;\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n`;\n\nexport const StyledInput = styled.input`\n  padding: 5px;\n  height: 100%;\n  width: 100%;\n  border-radius: 0px;\n  border: solid 0px;\n  background-color: #ffffff;\n  opacity: 0.85;\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n`;\n\nexport const SmartContractButton = styled.button`\n  padding: 10px;\n  border-radius: 0px;\n  border: solid 2px;\n  background-color: rgba(108,127,72,0.5);\n  padding: 0px;\n  font-weight: bold;\n  color: #000000;\n  height: 30px;\n  width: 150px;\n  cursor: pointer;\n  text-align: start;\n  box-shadow: 0px 0px 0px 0px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 0px 0px 0px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 0px 0px 0px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: left;\n  justify-content: left;\n  box-shadow: 0px 0px 0px 0px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 0px 0px 0px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 0px 0px 0px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n//Container Settings\nexport const ResponsiveWrapper = styled.div` \n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n  width: 100%;\n  @media (min-width: 1250px) { \n    flex-direction: row;\n  }\n`;\n// Logo\nexport const StyledLogo = styled.img`\n  width: 400px;\n  @media (min-width: 625px) {\n    width: 600px;\n  }\n  @media (min-width: 1250px) {\n    width: 800px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\n\n// rotating image\nexport const StyledImg = styled.img` \n  box-shadow: 0px 0px 1.5px 1.5px rgba(0, 0, 0, 0.85);\n  border: 0px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 0%;\n  width: 350px;\n  @media (min-width: 625px) {\n    width: 500px;\n  }\n  @media (min-width: 1250px) {\n    width: 500px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: #000000;\n  text-decoration: underline;\n  font-size: 32px;\n`;\n\nfunction App() {\n  \n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [burningNft, setBurningNft] = useState(false);\n  const [mintFeedback, setMintFeedback] = useState(`Click \"MINT\" to mint your NFT.`);\n  const [burnFeedback, setBurnFeedback] = useState(`Click \"BURN\" to burn your NFT.`);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    INCREMENT_WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n  \n\n  const mintNFTs = () => {\n    let basecost = (CONFIG.WEI_COST);\n    let mintedSupplyCounter = Number(data.getMintedSupplyCounter);\n    let nextID = mintedSupplyCounter + 1;\n    let addcost = (CONFIG.INCREMENT_WEI_COST);\n    let cost = basecost + addcost * mintedSupplyCounter;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost);\n    let totalGasLimit = String(gasLimit);\n    setMintFeedback(`Minting your Scenic Cup ...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .safeMint(blockchain.account)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setMintFeedback(\"Sorry, something went wrong - please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setMintFeedback(\n          `Minting successful! The Scenic Cup with the ID ${nextID} is now yours! Go visit Quixotic.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const burnNFTs = () => {\n    let burnInputID = document.getElementById(\"burnInput\").value;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalGasLimit = String(gasLimit);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setBurnFeedback(`Burning your Scenic Cup ...`);\n    setBurningNft(true);\n    blockchain.smartContract.methods\n      .burn(burnInputID)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setBurnFeedback(\"Sorry, something went wrong - please try again later.\");\n        setBurningNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setBurnFeedback(\n          `The Scenic Cup has been burned! Go fill in the redemption form to have the physical Scenic Cup delivered to you.`\n        );\n        setBurningNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n    \n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  let mintcost = (CONFIG.DISPLAY_COST + (CONFIG.INCREMENT_DISPLAY_COST * data.getMintedSupplyCounter));\n  let rounddisplay = Math.round(mintcost * 1000) / 1000.0;\n  let mintdisplay = String(rounddisplay); \n  console.log(mintcost);\n  return (\n    <s.Screen>\n      <s.Container // Container for Content\n        flex={1}\n        ai={\"left\"}\n        style={{ padding: 48, backgroundColor: \"var(--primary)\" }}\n        image={\"/config/images/bg_top.png\"}\n      >\n        <ResponsiveWrapper flex={1} style={{ padding: 0 }}>\n          <s.Container // Header Container\n        >\n        <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ paddingLeft: 64, paddingRight: 64, paddingTop: 0, paddingBottom: 12 }}>\n          <s.Container // Stats Container\n            flex={1}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"rgba(256,256,256,0.85)\", \n              padding: 4, \n              borderRadius: 0, \n              border: \"0px solid #000000\",\n              boxShadow: \"0px 0px 1.5px 1.5px rgba(0,0,0,1)\",\n              width: \"100%\",\n            }}\n          >\n            <ResponsiveWrapper flex={1} style={{ paddingLeft: 0, paddingRight: 0, paddingTop: 0, paddingBottom: 0 }}>\n            <s.Container // minted\n            flex={1}\n            jc={\"center\"}\n            ai={\"center\"}\n            >\n              <s.TextTitle style={{ textAlign: \"center\", color: \"#000000\" }}> \n            {blockchain.account === \"\" || blockchain.smartContract === null ? (\n              <>\n              minted: ... / {CONFIG.MAX_SUPPLY}\n              </>\n              ):(\n              <\n              >\n              minted: {Number(data.getMintedSupplyCounter)} / {CONFIG.MAX_SUPPLY} \n              </>)\n            }\n            </s.TextTitle>\n            </s.Container>\n            <s.Container // redeemed\n            flex={1}\n            jc={\"center\"}\n            ai={\"center\"}\n            >\n              <s.TextTitle style={{ textAlign: \"center\", color: \"#000000\" }}> \n              redeemed: 0 / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            </s.Container>\n            <s.Container // burned\n            flex={1}\n            jc={\"center\"}\n            ai={\"center\"}\n            >\n              <s.TextTitle style={{ textAlign: \"center\", color: \"#000000\" }}> \n            {blockchain.account === \"\" || blockchain.smartContract === null ? (\n              <>\n              burned: ... / {CONFIG.MAX_SUPPLY}\n              </>\n              ):(\n              <\n              >\n              burned: {data.getBurnedSupplyCounter} / {CONFIG.MAX_SUPPLY} \n              </>)\n            }\n            </s.TextTitle>\n            </s.Container>\n            </ResponsiveWrapper>\n          </s.Container>\n        </ResponsiveWrapper>\n        <ResponsiveWrapper flex={1} style={{ paddingLeft: 64, paddingRight: 64, paddingTop: 16, paddingBottom: 16 }}> \n          <s.Container // Mint Container\n            flex={2}\n            jc={\"flex-start\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"rgba(256,256,256,0.85)\", // background of container\n              padding: 8, // space around container content\n              borderRadius: 0, // radius of container border\n              border: \"0px var(--secondary)\",\n              boxShadow: \"0px 0px 1.5px 1.5px rgba(0,0,0,1)\",\n              height: \"300px\"\n\n            }}\n          >\n            <s.TextMajor\n              style={{\n                textAlign: \"center\",\n                color: \"#000000\",\n                fontWeight: \"bold\"\n              }}\n            >\n              Mint NFT\n            </s.TextMajor>\n            {Number(data.getMintedSupplyCounter) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"#000000\" }}\n                >\n                  All Scenic Cups have been minted.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"#000000\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle style={{ textAlign: \"center\", color: \"#000000\" }}>\n                {blockchain.account === \"\" || blockchain.smartContract === null ? (\n                <>\n                1 Scenic Cup costs ... {\" \"}{CONFIG.NETWORK.SYMBOL}\n                </>\n                ):(\n                <>\n                1 Scenic Cup costs {mintdisplay}{\" \"}{CONFIG.NETWORK.SYMBOL}\n                </>)\n                }\n                </s.TextTitle>\n                <s.SpacerLarge />\n                <s.SpacerLarge />\n                <s.SpacerLarge />\n                <s.SpacerLarge />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <StyledButton\n                      style={{\n                        textAlign: \"center\",\n                        color: \"#000000\",\n                        fontSize: \"22px\",\n                      }}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    <s.SpacerSmall />\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"#000000\",\n                      }}\n                    >\n                      Connect to {CONFIG.NETWORK.NAME}\n                    </s.TextDescription>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"#000000\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                    </s.Container>\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        style={{\n                          textAlign: \"center\",\n                          color: \"#000000\",\n                          fontSize: \"22px\",\n                          }}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          mintNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"MINT\"}\n                      </StyledButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"#000000\",\n                      }}\n                    >\n                      {mintFeedback}\n                    </s.TextDescription>\n                  </>\n                )}\n              </>\n            )}\n          </s.Container>\n          <s.SpacerLarge /> \n          <s.Container flex={1} jc={\"center\"} ai={\"center\"} // Rotating Image Container\n          >\n            <StyledImg // Rotating Image\n              alt={\"ScenicCupsGIF\"}\n              src={\"/config/images/rotating.gif\"}\n            />\n          </s.Container>\n          <s.SpacerLarge />  \n          <s.Container // Burn Container\n            flex={2}\n            jc={\"flex-start\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"rgba(256,256,256,0.85)\", // background of container\n              padding: 8, // space around container content\n              borderRadius: 0, // radius of container border\n              border: \"0px dashed var(--secondary)\",\n              boxShadow: \"0px 0px 1.5px 1.5px rgba(0,0,0,1)\",\n              height: \"300px\"\n            }}\n          >\n            <s.TextMajor\n              style={{\n                textAlign: \"center\",\n                color: \"#000000\",\n                fontWeight: \"bold\"\n              }}\n            >\n              Burn NFT\n            </s.TextMajor>\n                <s.TextTitle\n                  style=\n                  {{\n                    textAlign: \"center\",\n                    color: \"#000000\",\n                  }}\n                    >\n                      Enter your Token ID:\n                </s.TextTitle>\n                <s.SpacerMedium />\n                <StyledForm>\n                  <StyledInput\n                      style={{\n                      textAlign: \"center\",\n                      color: \"#000000\",\n                      fontSize: \"24px\",\n                      }}\n                      type=\"number\"\n                      id=\"burnInput\"\n                      class=\"burnInput\"\n                      placeholder=\"ID\"\n                    >\n                  </StyledInput>\n                </StyledForm>\n                <s.SpacerMedium />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <StyledButton\n                      style={{\n                      textAlign: \"center\",\n                      color: \"#000000\",\n                      fontSize: \"22px\",\n                      }}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    <s.SpacerSmall />\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"#000000\",\n                      }}\n                    >\n                      Connect to {CONFIG.NETWORK.NAME}\n                    </s.TextDescription>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"#000000\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={burningNft ? 1 : 0}\n                        style={{\n                          textAlign: \"center\",\n                          color: \"#000000\",\n                          fontSize: \"22px\",\n                          }}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          burnNFTs();\n                          getData();\n                        }}\n                      >\n                        {burningNft ? \"BUSY\" : \"BURN\"}\n                      </StyledButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"#000000\",\n                      }}\n                    >\n                      {burnFeedback}\n                    </s.TextDescription>\n                  </>)\n            }\n          </s.Container>\n        </ResponsiveWrapper>\n        <ResponsiveWrapper flex={1} style={{ paddingLeft: 64, paddingRight: 64, paddingTop: 16, paddingBottom: 16 }}> \n          <s.Container flex={1} jc={\"flex-start\"} ai={\"left\"} style={{ // Minting Process Container\n              backgroundColor: \"rgba(256,256,256,0.85)\", // background of container\n              paddingLeft: 32,\n              paddingTop: 8,\n              borderRadius: 0, // radius of container border\n              border: \"1px solid #000000\",\n              boxShadow: \"0px 0px 1.5px 1.5px rgba(0,0,0,1)\",\n              width: \"100%\",\n              height: \"300px\"}}>\n            <s.TextMajor\n              style={{\n                textAlign: \"left\",\n                color: \"#000000\",\n                fontWeight: \"bold\"\n              }}\n            >\n              Minting Process\n            </s.TextMajor>\n            <s.TextDescription\n            style={{\n              textAlign: \"left\",\n              color: \"var(--primary-text)\",\n            }}\n            >\n            Step 1: Connect MetaMask wallet by pressing the \"CONNECT\" button.<br/>\n            Step 2: Press the \"MINT\" button to initiate the transaction.<br/>\n            Step 3: Confirm the transaction in MetaMask.<br/>\n            Step 4: Wait for the transaction to complete.<br/>\n            Step 5: The Scenic Cup NFT is now yours, thank you!\n          </s.TextDescription>\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"flex-start\"} ai={\"left\"} style={{ // Redemption Process Container\n              backgroundColor: \"rgba(256,256,256,0.85)\", // background of container\n              paddingLeft: 32,\n              paddingTop: 8,\n              borderRadius: 0, // radius of container border\n              border: \"1px solid #000000\",\n              boxShadow: \"0px 0px 1.5px 1.5px rgba(0,0,0,1)\",\n              width: \"100%\",\n              height: \"300px\",}}>\n            <s.TextMajor\n              style={{\n                textAlign: \"left\",\n                color: \"#000000\",\n                fontWeight: \"bold\"\n              }}\n            >\n              Redemption Process\n            </s.TextMajor>\n            <s.TextDescription\n            style={{\n              textAlign: \"left\",\n              color: \"var(--primary-text)\",\n            }}\n            >\n            Step 1: Connect MetaMask wallet by pressing the \"CONNECT\" button.<br/>\n            Step 2: Enter your Token ID (1-100).<br/>\n            Step 3: Press the \"BURN\" button to initiate the transaction.<br/>\n            Step 4: Confirm the transaction in MetaMask.<br/>\n            Step 5: Wait for the transaction to complete.<br/>\n            Step 6: Submit the <a style={{color: \"#000000\", textDecoration: \"underline\"}} target=\"_blank\" href=\"https://forms.gle/fFWfvVuKesd4WDAr7\">redemption form</a> to receive the physical Scenic Cup.\n          </s.TextDescription>\n          </s.Container>\n        </ResponsiveWrapper>\n      </s.Container>\n      <s.Container // Container for Bottom Content\n        flex={1}\n        ai={\"left\"}\n        style={{ padding: 48, backgroundColor: \"var(--primary)\" }}\n        image={\"/config/images/bg_bottom.png\"}\n      >\n      <ResponsiveWrapper style={{ paddingLeft: 64, paddingRight: 0, paddingTop: 16, paddingBottom: 16 }}>\n        <s.Container \n        flex={1} \n        jc={\"center\"} \n        ai={\"left\"} \n        style={{\n          backgroundColor: \"rgba(256,256,256,0.75)\", // background of container\n          paddingLeft: 32,\n          paddingTop: 8, // space around container content\n          paddingBottom: 24,\n          borderRadius: 0, // radius of container border\n          border: \"0px solid #000000\",\n          boxShadow: \"0px 0px 1.5px 1.5px rgba(108,127,72,0.5)\",\n          width: \"100%\",}}\n        >\n          <s.TextMajor\n            style={{\n             textAlign: \"left\",\n             color: \"#000000\",}}\n          >\n           Information\n          </s.TextMajor>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n             textAlign: \"left\",\n             color: \"var(--primary-text)\",}}\n          >\n            <em>Please make sure you are connected to {CONFIG.NETWORK.NAME} and the correct address. <br/>\n            Please note:  Once you make the purchase, you cannot undo this action.</em>\n         </s.TextDescription>\n         <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"left\",\n             color: \"var(--primary-text)\",}}\n          >\n           We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract interaction to\n           be successful.<br/>\n           We recommend that you don't lower the gas limit.\n         </s.TextDescription>\n         <s.SpacerSmall/>\n          <SmartContractButton\n            style={{\n              textAlign: \"center\",\n              color: \"#000000\",\n              fontSize: \"12px\",\n              padding: \"4px\",}}\n           onClick={(e) => {\n              e.preventDefault();\n              window.open(CONFIG.SCAN_LINK)}}\n          >\n           VIEW SC CONTRACT\n          </SmartContractButton>\n          <s.SpacerSmall/>\n          <SmartContractButton \n            style={{\n              textAlign: \"center\",\n              color: \"#000000\",\n              fontSize: \"12px\",\n              padding: \"4px\",}}\n           onClick={(e) => {\n             e.preventDefault();\n             window.open(CONFIG.SCAN_LINK)}} // TODO insert correct link (to rSC)\n          >\n           VIEW rSC CONTRACT\n         </SmartContractButton> \n       </s.Container>\n       <s.Container flex={1} jc={\"center\"} ai={\"center\"} style={{\n          backgroundColor: \"rgba(256,256,256,0)\", // background of container\n          padding: 12, // space around container content\n          borderRadius: 0, // radius of container border\n          border: \"0px solid #000000\",\n          boxShadow: \"0px 0px 0px 0px rgba(235,201,8,1)\",\n          width: \"50%\",}}>\n       </s.Container>\n      </ResponsiveWrapper>\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n      <s.SpacerLarge />\n    </s.Container>\n    <s.Container // Container for Footer Content\n        flex={1}\n        ai={\"left\"}\n        style={{ padding: 0, backgroundColor: \"#000000\" }}\n      >\n        <ResponsiveWrapper style={{ padding: 0 }}>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"} style={{\n              backgroundColor: \"#000000\", // background of container\n              padding: 12, // space around container content\n              borderRadius: 0, // radius of container border\n              border: \"0px var(--secondary)\",\n              boxShadow: \"0px 0px 0px 0px rgba(0,0,0,1)\",\n              width: \"100%\",}}>\n            <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"#ffffff\",\n              fontSize: 16,\n            }}\n            >\n            Project by <a style={{color: \"#6c7f48\", textDecoration: \"none\"}} href=\"https://www.ritziporzellan.ch\" target=\"_blank\">ritziporzellan.ch</a> | Smart Contracts and Interface by <a style={{color: \"#6c7f48\", textDecoration: \"none\"}} href=\"https://twitter.com/decentralix\" target=\"_blank\">@decentralix</a> | <a href=\"/license.txt\" target=\"_blank\" style={{color: \"#6c7f48\", textDecoration: \"none\"}}>License / Copyright</a>\n            </s.TextDescription>\n          </s.Container>\n        </ResponsiveWrapper>\n    </s.Container>\n  </s.Screen>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}